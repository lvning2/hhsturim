<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="rebotstudio.hhsturim.mapper.ContractMapper">
  <resultMap id="BaseResultMap" type="rebotstudio.hhsturim.entity.Contract">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="partyA" jdbcType="INTEGER" property="partya" />
    <result column="partyB" jdbcType="INTEGER" property="partyb" />
    <result column="contractStartTime" jdbcType="DATE" property="contractstarttime" />
    <result column="contractEndTime" jdbcType="DATE" property="contractendtime" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="rebotstudio.hhsturim.entity.Contract">
    <result column="contractContent" jdbcType="LONGVARCHAR" property="contractcontent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, partyA, partyB, contractStartTime, contractEndTime, state
  </sql>
  <sql id="Blob_Column_List">
    contractContent
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="rebotstudio.hhsturim.entity.ContractExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="rebotstudio.hhsturim.entity.ContractExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from contract
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from contract
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="rebotstudio.hhsturim.entity.ContractExample">
    delete from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="rebotstudio.hhsturim.entity.Contract">
    insert into contract (id, partyA, partyB, 
      contractStartTime, contractEndTime, state, 
      contractContent)
    values (#{id,jdbcType=INTEGER}, #{partya,jdbcType=INTEGER}, #{partyb,jdbcType=INTEGER}, 
      #{contractstarttime,jdbcType=DATE}, #{contractendtime,jdbcType=DATE}, #{state,jdbcType=INTEGER}, 
      #{contractcontent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="rebotstudio.hhsturim.entity.Contract">
    insert into contract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="partya != null">
        partyA,
      </if>
      <if test="partyb != null">
        partyB,
      </if>
      <if test="contractstarttime != null">
        contractStartTime,
      </if>
      <if test="contractendtime != null">
        contractEndTime,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="contractcontent != null">
        contractContent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="partya != null">
        #{partya,jdbcType=INTEGER},
      </if>
      <if test="partyb != null">
        #{partyb,jdbcType=INTEGER},
      </if>
      <if test="contractstarttime != null">
        #{contractstarttime,jdbcType=DATE},
      </if>
      <if test="contractendtime != null">
        #{contractendtime,jdbcType=DATE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="contractcontent != null">
        #{contractcontent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="rebotstudio.hhsturim.entity.ContractExample" resultType="java.lang.Long">
    select count(*) from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update contract
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.partya != null">
        partyA = #{record.partya,jdbcType=INTEGER},
      </if>
      <if test="record.partyb != null">
        partyB = #{record.partyb,jdbcType=INTEGER},
      </if>
      <if test="record.contractstarttime != null">
        contractStartTime = #{record.contractstarttime,jdbcType=DATE},
      </if>
      <if test="record.contractendtime != null">
        contractEndTime = #{record.contractendtime,jdbcType=DATE},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.contractcontent != null">
        contractContent = #{record.contractcontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update contract
    set id = #{record.id,jdbcType=INTEGER},
      partyA = #{record.partya,jdbcType=INTEGER},
      partyB = #{record.partyb,jdbcType=INTEGER},
      contractStartTime = #{record.contractstarttime,jdbcType=DATE},
      contractEndTime = #{record.contractendtime,jdbcType=DATE},
      state = #{record.state,jdbcType=INTEGER},
      contractContent = #{record.contractcontent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update contract
    set id = #{record.id,jdbcType=INTEGER},
      partyA = #{record.partya,jdbcType=INTEGER},
      partyB = #{record.partyb,jdbcType=INTEGER},
      contractStartTime = #{record.contractstarttime,jdbcType=DATE},
      contractEndTime = #{record.contractendtime,jdbcType=DATE},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="rebotstudio.hhsturim.entity.Contract">
    update contract
    <set>
      <if test="partya != null">
        partyA = #{partya,jdbcType=INTEGER},
      </if>
      <if test="partyb != null">
        partyB = #{partyb,jdbcType=INTEGER},
      </if>
      <if test="contractstarttime != null">
        contractStartTime = #{contractstarttime,jdbcType=DATE},
      </if>
      <if test="contractendtime != null">
        contractEndTime = #{contractendtime,jdbcType=DATE},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="contractcontent != null">
        contractContent = #{contractcontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="rebotstudio.hhsturim.entity.Contract">
    update contract
    set partyA = #{partya,jdbcType=INTEGER},
      partyB = #{partyb,jdbcType=INTEGER},
      contractStartTime = #{contractstarttime,jdbcType=DATE},
      contractEndTime = #{contractendtime,jdbcType=DATE},
      state = #{state,jdbcType=INTEGER},
      contractContent = #{contractcontent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="rebotstudio.hhsturim.entity.Contract">
    update contract
    set partyA = #{partya,jdbcType=INTEGER},
      partyB = #{partyb,jdbcType=INTEGER},
      contractStartTime = #{contractstarttime,jdbcType=DATE},
      contractEndTime = #{contractendtime,jdbcType=DATE},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>